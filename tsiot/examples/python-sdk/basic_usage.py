#!/usr/bin/env python3\n\"\"\"\nTSIoT Python SDK - Basic Usage Example\n\nDemonstrates basic usage of the TSIoT Python SDK.\n\"\"\"\n\nimport os\nfrom datetime import datetime, timedelta\nfrom tsiot import TSIoTClient\n\ndef main():\n    # Initialize client\n    server_url = os.getenv('TSIOT_SERVER_URL', 'http://localhost:8080')\n    client = TSIoTClient(base_url=server_url)\n    \n    print(f\"=€ Connecting to TSIoT server at {server_url}\")\n    \n    # Basic temperature data generation\n    print(\"\\n<! Generating temperature data...\")\n    temp_data = client.generate(\n        generator='statistical',\n        sensor_type='temperature',\n        points=100,\n        frequency='1m'\n    )\n    \n    print(f\"Generated {len(temp_data.points)} temperature data points\")\n    print(f\"Temperature range: {min(temp_data.values()):.1f}°C to {max(temp_data.values()):.1f}°C\")\n    \n    # Save to CSV\n    temp_data.to_csv('temperature_data.csv')\n    print(\"=¾ Data saved to temperature_data.csv\")\n    \n    # Validate data quality\n    print(\"\\n= Validating data quality...\")\n    validation_result = client.validate(\n        data=temp_data,\n        metrics=['basic', 'distribution']\n    )\n    \n    print(f\"Quality score: {validation_result.quality_score:.2f}\")\n    print(f\"Validation passed: {' Yes' if validation_result.passed else 'L No'}\")\n    \n    print(\"\\n<Á Example completed!\")\n\nif __name__ == '__main__':\n    main()"