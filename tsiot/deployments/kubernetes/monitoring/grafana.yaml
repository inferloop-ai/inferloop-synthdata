---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: tsiot-monitoring
  labels:
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: tsiot
    app.kubernetes.io/version: "10.1.0"
    app.kubernetes.io/component: monitoring
    app.kubernetes.io/part-of: tsiot-platform
    app.kubernetes.io/managed-by: kubectl
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: grafana
      app.kubernetes.io/instance: tsiot
  template:
    metadata:
      labels:
        app.kubernetes.io/name: grafana
        app.kubernetes.io/instance: tsiot
        app.kubernetes.io/version: "10.1.0"
        app.kubernetes.io/component: monitoring
        app.kubernetes.io/part-of: tsiot-platform
    spec:
      serviceAccountName: grafana
      securityContext:
        runAsNonRoot: true
        runAsUser: 472
        runAsGroup: 472
        fsGroup: 472
      containers:
        - name: grafana
          image: grafana/grafana:10.1.0
          imagePullPolicy: IfNotPresent
          ports:
            - name: grafana
              containerPort: 3000
              protocol: TCP
          env:
            - name: GF_SECURITY_ADMIN_USER
              valueFrom:
                secretKeyRef:
                  name: grafana-credentials
                  key: admin-user
            - name: GF_SECURITY_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: grafana-credentials
                  key: admin-password
            - name: GF_INSTALL_PLUGINS
              value: "grafana-piechart-panel,grafana-worldmap-panel,grafana-clock-panel,natel-discrete-panel,vonage-status-panel"
            - name: GF_PATHS_DATA
              value: "/var/lib/grafana"
            - name: GF_PATHS_LOGS
              value: "/var/log/grafana"
            - name: GF_PATHS_PLUGINS
              value: "/var/lib/grafana/plugins"
            - name: GF_PATHS_PROVISIONING
              value: "/etc/grafana/provisioning"
            - name: GF_SERVER_PROTOCOL
              value: "http"
            - name: GF_SERVER_HTTP_PORT
              value: "3000"
            - name: GF_SERVER_DOMAIN
              value: "grafana.tsiot.com"
            - name: GF_SERVER_ROOT_URL
              value: "https://grafana.tsiot.com"
            - name: GF_DATABASE_TYPE
              value: "sqlite3"
            - name: GF_DATABASE_PATH
              value: "/var/lib/grafana/grafana.db"
            - name: GF_SESSION_PROVIDER
              value: "file"
            - name: GF_SESSION_PROVIDER_CONFIG
              value: "/var/lib/grafana/sessions"
            - name: GF_ANALYTICS_REPORTING_ENABLED
              value: "false"
            - name: GF_ANALYTICS_CHECK_FOR_UPDATES
              value: "false"
            - name: GF_SECURITY_DISABLE_GRAVATAR
              value: "true"
            - name: GF_USERS_ALLOW_SIGN_UP
              value: "false"
            - name: GF_USERS_ALLOW_ORG_CREATE
              value: "false"
            - name: GF_USERS_AUTO_ASSIGN_ORG
              value: "true"
            - name: GF_USERS_AUTO_ASSIGN_ORG_ROLE
              value: "Viewer"
            - name: GF_AUTH_DISABLE_LOGIN_FORM
              value: "false"
            - name: GF_AUTH_DISABLE_SIGNOUT_MENU
              value: "false"
            - name: GF_LOG_MODE
              value: "console"
            - name: GF_LOG_LEVEL
              value: "info"
            - name: GF_ALERTING_ENABLED
              value: "true"
            - name: GF_ALERTING_EXECUTE_ALERTS
              value: "true"
            - name: GF_EXPLORE_ENABLED
              value: "true"
          livenessProbe:
            httpGet:
              path: /api/health
              port: grafana
            initialDelaySeconds: 60
            periodSeconds: 30
            timeoutSeconds: 10
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /api/health
              port: grafana
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          resources:
            requests:
              cpu: 100m
              memory: 256Mi
            limits:
              cpu: 500m
              memory: 1Gi
          volumeMounts:
            - name: grafana-storage
              mountPath: /var/lib/grafana
            - name: grafana-config
              mountPath: /etc/grafana/grafana.ini
              subPath: grafana.ini
            - name: grafana-datasources
              mountPath: /etc/grafana/provisioning/datasources
            - name: grafana-dashboards-config
              mountPath: /etc/grafana/provisioning/dashboards
            - name: grafana-dashboards
              mountPath: /var/lib/grafana/dashboards
      volumes:
        - name: grafana-storage
          persistentVolumeClaim:
            claimName: grafana-storage
        - name: grafana-config
          configMap:
            name: grafana-config
        - name: grafana-datasources
          configMap:
            name: grafana-datasources
        - name: grafana-dashboards-config
          configMap:
            name: grafana-dashboards-config
        - name: grafana-dashboards
          configMap:
            name: grafana-dashboards
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - key: "monitoring"
          operator: "Equal"
          value: "true"
          effect: "NoSchedule"

---
apiVersion: v1
kind: Service
metadata:
  name: grafana
  namespace: tsiot-monitoring
  labels:
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: tsiot
    app.kubernetes.io/version: "10.1.0"
    app.kubernetes.io/component: monitoring
    app.kubernetes.io/part-of: tsiot-platform
    app.kubernetes.io/managed-by: kubectl
spec:
  type: ClusterIP
  ports:
    - name: grafana
      port: 3000
      targetPort: grafana
      protocol: TCP
  selector:
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: tsiot

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: grafana-storage
  namespace: tsiot-monitoring
  labels:
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: tsiot
    app.kubernetes.io/version: "10.1.0"
    app.kubernetes.io/component: monitoring
    app.kubernetes.io/part-of: tsiot-platform
    app.kubernetes.io/managed-by: kubectl
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: gp3
  resources:
    requests:
      storage: 10Gi

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: grafana
  namespace: tsiot-monitoring
  labels:
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: tsiot
    app.kubernetes.io/version: "10.1.0"
    app.kubernetes.io/component: monitoring
    app.kubernetes.io/part-of: tsiot-platform
    app.kubernetes.io/managed-by: kubectl
automountServiceAccountToken: true

---
apiVersion: v1
kind: Secret
metadata:
  name: grafana-credentials
  namespace: tsiot-monitoring
  labels:
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: tsiot
    app.kubernetes.io/version: "10.1.0"
    app.kubernetes.io/component: monitoring
    app.kubernetes.io/part-of: tsiot-platform
    app.kubernetes.io/managed-by: kubectl
  annotations:
    secrets-manager.io/secret-arn: "arn:aws:secretsmanager:us-west-2:123456789012:secret:tsiot/prod/grafana-credentials"
    secrets-manager.io/auto-refresh: "true"
    secrets-manager.io/refresh-interval: "24h"
type: Opaque
data:
  admin-user: YWRtaW4=  # admin
  admin-password: Z3JhZmFuYS1hZG1pbi1wYXNzd29yZC1jaGFuZ2UtbWU=  # grafana-admin-password-change-me

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-config
  namespace: tsiot-monitoring
  labels:
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: tsiot
    app.kubernetes.io/version: "10.1.0"
    app.kubernetes.io/component: monitoring
    app.kubernetes.io/part-of: tsiot-platform
    app.kubernetes.io/managed-by: kubectl
data:
  grafana.ini: |
    [analytics]
    check_for_updates = false
    reporting_enabled = false

    [grafana_net]
    url = https://grafana.net

    [log]
    mode = console
    level = info

    [paths]
    data = /var/lib/grafana/
    logs = /var/log/grafana
    plugins = /var/lib/grafana/plugins
    provisioning = /etc/grafana/provisioning

    [server]
    protocol = http
    http_port = 3000
    domain = grafana.tsiot.com
    enforce_domain = false
    root_url = https://grafana.tsiot.com
    serve_from_sub_path = false

    [database]
    type = sqlite3
    path = /var/lib/grafana/grafana.db

    [session]
    provider = file
    provider_config = /var/lib/grafana/sessions

    [security]
    admin_user = admin
    admin_password = $GF_SECURITY_ADMIN_PASSWORD
    secret_key = SW2YcwTIb9zpOOhoPsMm
    disable_gravatar = true

    [users]
    allow_sign_up = false
    allow_org_create = false
    auto_assign_org = true
    auto_assign_org_role = Viewer

    [auth]
    disable_login_form = false
    disable_signout_menu = false

    [auth.anonymous]
    enabled = false

    [auth.basic]
    enabled = true

    [auth.ldap]
    enabled = false

    [smtp]
    enabled = false

    [emails]
    welcome_email_on_sign_up = false

    [alerting]
    enabled = true
    execute_alerts = true

    [explore]
    enabled = true

    [plugins]
    enable_alpha = false

    [feature_toggles]
    enable = newNavigation

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-datasources
  namespace: tsiot-monitoring
  labels:
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: tsiot
    app.kubernetes.io/version: "10.1.0"
    app.kubernetes.io/component: monitoring
    app.kubernetes.io/part-of: tsiot-platform
    app.kubernetes.io/managed-by: kubectl
data:
  datasources.yaml: |
    apiVersion: 1
    datasources:
      - name: Prometheus
        type: prometheus
        access: proxy
        url: http://prometheus:9090
        isDefault: true
        editable: true
        jsonData:
          timeInterval: 15s
          queryTimeout: 60s
          httpMethod: POST
          exemplarTraceIdDestinations:
            - name: trace_id
              datasourceUid: jaeger
        secureJsonData: {}

      - name: InfluxDB
        type: influxdb
        access: proxy
        url: http://influxdb-service.tsiot.svc.cluster.local:8086
        database: tsiot
        user: tsiot_user
        secureJsonData:
          password: influxdb-password-change-me
        jsonData:
          timeInterval: 15s
          httpMode: GET
          keepCookies: []

      - name: Elasticsearch
        type: elasticsearch
        access: proxy
        url: http://elasticsearch-service.tsiot.svc.cluster.local:9200
        database: tsiot-logs-*
        jsonData:
          interval: Daily
          timeField: "@timestamp"
          esVersion: "8.0.0"
          maxConcurrentShardRequests: 5
          logMessageField: message
          logLevelField: level

      - name: Jaeger
        type: jaeger
        access: proxy
        url: http://jaeger-query.tsiot-monitoring.svc.cluster.local:16686
        uid: jaeger
        jsonData:
          tracesToLogs:
            datasourceUid: loki
            tags: [job, instance, pod, namespace]
            mappedTags: [service_name]
            mapTagNamesEnabled: false
            spanStartTimeShift: 1h
            spanEndTimeShift: 1h

      - name: Loki
        type: loki
        access: proxy
        url: http://loki.tsiot-monitoring.svc.cluster.local:3100
        uid: loki
        jsonData:
          maxLines: 1000
          derivedFields:
            - datasourceUid: jaeger
              matcherRegex: "trace_id=(\\w+)"
              name: TraceID
              url: "$${__value.raw}"

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-dashboards-config
  namespace: tsiot-monitoring
  labels:
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: tsiot
    app.kubernetes.io/version: "10.1.0"
    app.kubernetes.io/component: monitoring
    app.kubernetes.io/part-of: tsiot-platform
    app.kubernetes.io/managed-by: kubectl
data:
  dashboards.yaml: |
    apiVersion: 1
    providers:
      - name: 'default'
        orgId: 1
        folder: ''
        type: file
        disableDeletion: false
        updateIntervalSeconds: 10
        allowUiUpdates: true
        options:
          path: /var/lib/grafana/dashboards

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-dashboards
  namespace: tsiot-monitoring
  labels:
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: tsiot
    app.kubernetes.io/version: "10.1.0"
    app.kubernetes.io/component: monitoring
    app.kubernetes.io/part-of: tsiot-platform
    app.kubernetes.io/managed-by: kubectl
data:
  tsiot-overview.json: |
    {
      "dashboard": {
        "id": null,
        "title": "TSIoT Platform Overview",
        "tags": ["tsiot", "overview"],
        "style": "dark",
        "timezone": "UTC",
        "panels": [
          {
            "id": 1,
            "title": "Server Status",
            "type": "stat",
            "targets": [
              {
                "expr": "up{job=\"tsiot-server\"}",
                "legendFormat": "Server Status"
              }
            ],
            "fieldConfig": {
              "defaults": {
                "color": {
                  "mode": "thresholds"
                },
                "thresholds": {
                  "steps": [
                    {"color": "red", "value": 0},
                    {"color": "green", "value": 1}
                  ]
                }
              }
            },
            "gridPos": {"h": 8, "w": 6, "x": 0, "y": 0}
          },
          {
            "id": 2,
            "title": "Worker Status",
            "type": "stat",
            "targets": [
              {
                "expr": "up{job=\"tsiot-worker\"}",
                "legendFormat": "Worker Status"
              }
            ],
            "fieldConfig": {
              "defaults": {
                "color": {
                  "mode": "thresholds"
                },
                "thresholds": {
                  "steps": [
                    {"color": "red", "value": 0},
                    {"color": "green", "value": 1}
                  ]
                }
              }
            },
            "gridPos": {"h": 8, "w": 6, "x": 6, "y": 0}
          },
          {
            "id": 3,
            "title": "Request Rate",
            "type": "graph",
            "targets": [
              {
                "expr": "rate(tsiot_http_requests_total[5m])",
                "legendFormat": "{{method}} {{status}}"
              }
            ],
            "gridPos": {"h": 8, "w": 12, "x": 12, "y": 0}
          },
          {
            "id": 4,
            "title": "Response Time",
            "type": "graph",
            "targets": [
              {
                "expr": "histogram_quantile(0.95, rate(tsiot_http_request_duration_seconds_bucket[5m]))",
                "legendFormat": "95th percentile"
              },
              {
                "expr": "histogram_quantile(0.50, rate(tsiot_http_request_duration_seconds_bucket[5m]))",
                "legendFormat": "50th percentile"
              }
            ],
            "gridPos": {"h": 8, "w": 12, "x": 0, "y": 8}
          },
          {
            "id": 5,
            "title": "Memory Usage",
            "type": "graph",
            "targets": [
              {
                "expr": "process_resident_memory_bytes{job=\"tsiot-server\"}",
                "legendFormat": "Server Memory"
              },
              {
                "expr": "process_resident_memory_bytes{job=\"tsiot-worker\"}",
                "legendFormat": "Worker Memory"
              }
            ],
            "gridPos": {"h": 8, "w": 12, "x": 12, "y": 8}
          }
        ],
        "time": {
          "from": "now-1h",
          "to": "now"
        },
        "refresh": "30s"
      }
    }

  kubernetes-cluster.json: |
    {
      "dashboard": {
        "id": null,
        "title": "Kubernetes Cluster Overview",
        "tags": ["kubernetes", "cluster"],
        "style": "dark",
        "timezone": "UTC",
        "panels": [
          {
            "id": 1,
            "title": "Cluster Nodes",
            "type": "stat",
            "targets": [
              {
                "expr": "count(kube_node_info)",
                "legendFormat": "Total Nodes"
              }
            ],
            "gridPos": {"h": 4, "w": 6, "x": 0, "y": 0}
          },
          {
            "id": 2,
            "title": "Total Pods",
            "type": "stat",
            "targets": [
              {
                "expr": "count(kube_pod_info)",
                "legendFormat": "Total Pods"
              }
            ],
            "gridPos": {"h": 4, "w": 6, "x": 6, "y": 0}
          },
          {
            "id": 3,
            "title": "CPU Usage by Node",
            "type": "graph",
            "targets": [
              {
                "expr": "100 - (avg by (instance) (rate(node_cpu_seconds_total{mode=\"idle\"}[5m])) * 100)",
                "legendFormat": "{{instance}}"
              }
            ],
            "gridPos": {"h": 8, "w": 12, "x": 0, "y": 4}
          },
          {
            "id": 4,
            "title": "Memory Usage by Node",
            "type": "graph",
            "targets": [
              {
                "expr": "(1 - (node_memory_MemAvailable_bytes / node_memory_MemTotal_bytes)) * 100",
                "legendFormat": "{{instance}}"
              }
            ],
            "gridPos": {"h": 8, "w": 12, "x": 12, "y": 4}
          }
        ],
        "time": {
          "from": "now-1h",
          "to": "now"
        },
        "refresh": "30s"
      }
    }

---
# Ingress for Grafana
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: grafana-ingress
  namespace: tsiot-monitoring
  labels:
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: tsiot
    app.kubernetes.io/version: "10.1.0"
    app.kubernetes.io/component: monitoring
    app.kubernetes.io/part-of: tsiot-platform
    app.kubernetes.io/managed-by: kubectl
  annotations:
    kubernetes.io/ingress.class: "alb"
    alb.ingress.kubernetes.io/scheme: internal
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/load-balancer-name: tsiot-grafana-alb
    alb.ingress.kubernetes.io/ssl-redirect: "443"
    alb.ingress.kubernetes.io/certificate-arn: "arn:aws:acm:us-west-2:123456789012:certificate/grafana-12345678-1234-1234-1234-123456789012"
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS": 443}]'
    alb.ingress.kubernetes.io/healthcheck-path: /api/health
    alb.ingress.kubernetes.io/inbound-cidrs: "10.0.0.0/8,172.16.0.0/12"
spec:
  ingressClassName: alb
  tls:
    - hosts:
        - grafana.tsiot.com
      secretName: grafana-tls-secret
  rules:
    - host: grafana.tsiot.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: grafana
                port:
                  number: 3000