---
apiVersion: v1
kind: ConfigMap
metadata:
  name: tsiot-server-config
  namespace: tsiot
  labels:
    app.kubernetes.io/name: tsiot-server
    app.kubernetes.io/instance: tsiot
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/component: server
    app.kubernetes.io/part-of: tsiot-platform
    app.kubernetes.io/managed-by: kubectl
data:
  # Application Configuration
  TSIOT_ENV: "production"
  TSIOT_LOG_LEVEL: "info"
  TSIOT_LOG_FORMAT: "json"
  
  # Server Configuration
  TSIOT_SERVER_HOST: "0.0.0.0"
  TSIOT_SERVER_PORT: "8080"
  TSIOT_SERVER_GRPC_PORT: "9090"
  TSIOT_SERVER_TIMEOUT: "30s"
  TSIOT_SERVER_READ_TIMEOUT: "15s"
  TSIOT_SERVER_WRITE_TIMEOUT: "15s"
  TSIOT_SERVER_IDLE_TIMEOUT: "60s"
  
  # Health Check Configuration
  TSIOT_HEALTH_CHECK_ENABLED: "true"
  TSIOT_HEALTH_CHECK_PATH: "/health"
  TSIOT_HEALTH_CHECK_INTERVAL: "10s"
  
  # Metrics Configuration
  TSIOT_METRICS_ENABLED: "true"
  TSIOT_METRICS_PATH: "/metrics"
  TSIOT_METRICS_PORT: "9091"
  
  # Tracing Configuration
  TSIOT_TRACING_ENABLED: "true"
  TSIOT_TRACING_ENDPOINT: "http://jaeger-collector.tsiot-monitoring.svc.cluster.local:14268/api/traces"
  TSIOT_TRACING_SAMPLE_RATE: "0.1"
  
  # Database Configuration
  TSIOT_DB_HOST: "postgres-service.tsiot.svc.cluster.local"
  TSIOT_DB_PORT: "5432"
  TSIOT_DB_NAME: "tsiot"
  TSIOT_DB_SSL_MODE: "require"
  TSIOT_DB_MAX_OPEN_CONNS: "25"
  TSIOT_DB_MAX_IDLE_CONNS: "5"
  TSIOT_DB_CONN_MAX_LIFETIME: "5m"
  TSIOT_DB_CONN_MAX_IDLE_TIME: "1m"
  
  # Redis Configuration
  TSIOT_REDIS_HOST: "redis-service.tsiot.svc.cluster.local"
  TSIOT_REDIS_PORT: "6379"
  TSIOT_REDIS_DB: "0"
  TSIOT_REDIS_POOL_SIZE: "10"
  TSIOT_REDIS_MIN_IDLE_CONNS: "2"
  TSIOT_REDIS_MAX_RETRIES: "3"
  TSIOT_REDIS_RETRY_DELAY: "100ms"
  
  # Kafka Configuration
  TSIOT_KAFKA_BROKERS: "kafka-service.tsiot.svc.cluster.local:9092"
  TSIOT_KAFKA_CONSUMER_GROUP: "tsiot-server"
  TSIOT_KAFKA_AUTO_OFFSET_RESET: "earliest"
  TSIOT_KAFKA_ENABLE_AUTO_COMMIT: "true"
  TSIOT_KAFKA_SESSION_TIMEOUT: "30s"
  TSIOT_KAFKA_HEARTBEAT_INTERVAL: "3s"
  
  # InfluxDB Configuration
  TSIOT_INFLUXDB_URL: "http://influxdb-service.tsiot.svc.cluster.local:8086"
  TSIOT_INFLUXDB_ORG: "tsiot"
  TSIOT_INFLUXDB_BUCKET: "timeseries"
  TSIOT_INFLUXDB_BATCH_SIZE: "1000"
  TSIOT_INFLUXDB_FLUSH_INTERVAL: "10s"
  
  # Elasticsearch Configuration
  TSIOT_ELASTICSEARCH_URL: "http://elasticsearch-service.tsiot.svc.cluster.local:9200"
  TSIOT_ELASTICSEARCH_INDEX_PREFIX: "tsiot"
  TSIOT_ELASTICSEARCH_BULK_SIZE: "100"
  TSIOT_ELASTICSEARCH_FLUSH_INTERVAL: "5s"
  
  # MQTT Configuration
  TSIOT_MQTT_BROKER: "tcp://mosquitto-service.tsiot.svc.cluster.local:1883"
  TSIOT_MQTT_CLIENT_ID: "tsiot-server"
  TSIOT_MQTT_QOS: "1"
  TSIOT_MQTT_RETAINED: "false"
  TSIOT_MQTT_CLEAN_SESSION: "true"
  TSIOT_MQTT_KEEP_ALIVE: "60s"
  
  # S3 Configuration
  TSIOT_S3_ENDPOINT: ""  # Will be set by environment
  TSIOT_S3_REGION: "us-west-2"
  TSIOT_S3_BUCKET: "tsiot-data"
  TSIOT_S3_USE_SSL: "true"
  TSIOT_S3_PATH_STYLE: "false"
  
  # Security Configuration
  TSIOT_ENABLE_TLS: "true"
  TSIOT_TLS_CERT_PATH: "/etc/ssl/certs/tls.crt"
  TSIOT_TLS_KEY_PATH: "/etc/ssl/private/tls.key"
  TSIOT_ENABLE_MTLS: "false"
  TSIOT_CORS_ENABLED: "true"
  TSIOT_CORS_ORIGINS: "*"
  TSIOT_CORS_METHODS: "GET,POST,PUT,DELETE,OPTIONS,PATCH"
  TSIOT_CORS_HEADERS: "Accept,Authorization,Content-Type,X-CSRF-Token,X-Requested-With"
  
  # Rate Limiting
  TSIOT_RATE_LIMIT_ENABLED: "true"
  TSIOT_RATE_LIMIT_REQUESTS: "1000"
  TSIOT_RATE_LIMIT_WINDOW: "1m"
  TSIOT_RATE_LIMIT_BURST: "100"
  
  # Feature Flags
  TSIOT_ENABLE_PROFILING: "false"
  TSIOT_ENABLE_DEBUG_ENDPOINTS: "false"
  TSIOT_ENABLE_EXPERIMENTAL_FEATURES: "false"
  
  # Performance Tuning
  TSIOT_MAX_REQUEST_SIZE: "32MB"
  TSIOT_MAX_HEADER_SIZE: "1MB"
  TSIOT_READ_BUFFER_SIZE: "4096"
  TSIOT_WRITE_BUFFER_SIZE: "4096"
  TSIOT_COMPRESS_RESPONSE: "true"
  
  # Cache Configuration
  TSIOT_CACHE_TTL: "300s"
  TSIOT_CACHE_MAX_SIZE: "1000"
  TSIOT_CACHE_CLEANUP_INTERVAL: "600s"

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: tsiot-worker-config
  namespace: tsiot
  labels:
    app.kubernetes.io/name: tsiot-worker
    app.kubernetes.io/instance: tsiot
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/component: worker
    app.kubernetes.io/part-of: tsiot-platform
    app.kubernetes.io/managed-by: kubectl
data:
  # Worker Configuration
  TSIOT_WORKER_CONCURRENCY: "4"
  TSIOT_WORKER_QUEUE_SIZE: "1000"
  TSIOT_WORKER_BATCH_SIZE: "100"
  TSIOT_WORKER_TIMEOUT: "300s"
  TSIOT_WORKER_HEARTBEAT: "30s"
  TSIOT_WORKER_RETRY_ATTEMPTS: "3"
  TSIOT_WORKER_RETRY_DELAY: "5s"
  TSIOT_WORKER_RETRY_EXPONENTIAL_BACKOFF: "true"
  
  # Health Check Configuration
  TSIOT_WORKER_HEALTH_CHECK_PORT: "8081"
  TSIOT_WORKER_HEALTH_CHECK_PATH: "/health"
  
  # ML Configuration
  TSIOT_ML_MODEL_PATH: "/app/models"
  TSIOT_ML_CACHE_SIZE: "100"
  TSIOT_ML_BATCH_INFERENCE_SIZE: "32"
  TSIOT_ML_GPU_ENABLED: "false"
  TSIOT_ML_GPU_MEMORY_FRACTION: "0.8"
  
  # Data Processing Configuration
  TSIOT_PROCESSING_CHUNK_SIZE: "10000"
  TSIOT_PROCESSING_PARALLEL_JOBS: "4"
  TSIOT_PROCESSING_MEMORY_LIMIT: "4Gi"
  TSIOT_PROCESSING_TEMP_DIR: "/tmp/tsiot"
  
  # Generation Configuration
  TSIOT_GENERATION_DEFAULT_ALGORITHM: "lstm"
  TSIOT_GENERATION_MAX_SERIES_LENGTH: "100000"
  TSIOT_GENERATION_BATCH_SIZE: "1000"
  TSIOT_GENERATION_VALIDATION_ENABLED: "true"
  
  # Privacy Configuration
  TSIOT_PRIVACY_ENABLED: "true"
  TSIOT_PRIVACY_K_ANONYMITY: "5"
  TSIOT_PRIVACY_L_DIVERSITY: "3"
  TSIOT_PRIVACY_T_CLOSENESS: "0.1"
  TSIOT_PRIVACY_DIFFERENTIAL_PRIVACY_ENABLED: "true"
  TSIOT_PRIVACY_EPSILON: "1.0"
  TSIOT_PRIVACY_DELTA: "1e-5"

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: tsiot-monitoring-config
  namespace: tsiot-monitoring
  labels:
    app.kubernetes.io/name: tsiot-monitoring
    app.kubernetes.io/instance: tsiot
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/component: monitoring
    app.kubernetes.io/part-of: tsiot-platform
    app.kubernetes.io/managed-by: kubectl
data:
  # Prometheus Configuration
  prometheus.yml: |
    global:
      scrape_interval: 15s
      evaluation_interval: 15s
      external_labels:
        cluster: 'tsiot-cluster'
        environment: 'production'
    
    rule_files:
      - "/etc/prometheus/rules/*.yml"
    
    alerting:
      alertmanagers:
        - static_configs:
            - targets:
              - alertmanager:9093
    
    scrape_configs:
      - job_name: 'prometheus'
        static_configs:
          - targets: ['localhost:9090']
      
      - job_name: 'tsiot-server'
        kubernetes_sd_configs:
          - role: endpoints
            namespaces:
              names:
                - tsiot
        relabel_configs:
          - source_labels: [__meta_kubernetes_service_name]
            action: keep
            regex: tsiot-server
          - source_labels: [__meta_kubernetes_endpoint_port_name]
            action: keep
            regex: metrics
      
      - job_name: 'tsiot-worker'
        kubernetes_sd_configs:
          - role: endpoints
            namespaces:
              names:
                - tsiot
        relabel_configs:
          - source_labels: [__meta_kubernetes_service_name]
            action: keep
            regex: tsiot-worker
          - source_labels: [__meta_kubernetes_endpoint_port_name]
            action: keep
            regex: metrics
      
      - job_name: 'kubernetes-apiservers'
        kubernetes_sd_configs:
          - role: endpoints
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        relabel_configs:
          - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
            action: keep
            regex: default;kubernetes;https
      
      - job_name: 'kubernetes-nodes'
        kubernetes_sd_configs:
          - role: node
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        relabel_configs:
          - action: labelmap
            regex: __meta_kubernetes_node_label_(.+)
          - target_label: __address__
            replacement: kubernetes.default.svc:443
          - source_labels: [__meta_kubernetes_node_name]
            regex: (.+)
            target_label: __metrics_path__
            replacement: /api/v1/nodes/${1}/proxy/metrics
      
      - job_name: 'kubernetes-pods'
        kubernetes_sd_configs:
          - role: pod
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
            action: keep
            regex: true
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
            action: replace
            target_label: __metrics_path__
            regex: (.+)
          - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
            action: replace
            regex: ([^:]+)(?::\d+)?;(\d+)
            replacement: $1:$2
            target_label: __address__
          - action: labelmap
            regex: __meta_kubernetes_pod_label_(.+)
          - source_labels: [__meta_kubernetes_namespace]
            action: replace
            target_label: kubernetes_namespace
          - source_labels: [__meta_kubernetes_pod_name]
            action: replace
            target_label: kubernetes_pod_name

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: tsiot-logging-config
  namespace: tsiot
  labels:
    app.kubernetes.io/name: tsiot-logging
    app.kubernetes.io/instance: tsiot
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/component: logging
    app.kubernetes.io/part-of: tsiot-platform
    app.kubernetes.io/managed-by: kubectl
data:
  # Fluent Bit Configuration
  fluent-bit.conf: |
    [SERVICE]
        Flush         1
        Log_Level     info
        Daemon        off
        Parsers_File  parsers.conf
        HTTP_Server   On
        HTTP_Listen   0.0.0.0
        HTTP_Port     2020

    [INPUT]
        Name              tail
        Path              /var/log/containers/tsiot-*.log
        Parser            docker
        Tag               kube.*
        Refresh_Interval  5
        Mem_Buf_Limit     50MB
        Skip_Long_Lines   On

    [FILTER]
        Name                kubernetes
        Match               kube.*
        Kube_URL            https://kubernetes.default.svc:443
        Kube_CA_File        /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        Kube_Token_File     /var/run/secrets/kubernetes.io/serviceaccount/token
        Kube_Tag_Prefix     kube.var.log.containers.
        Merge_Log           On
        Keep_Log            Off
        K8S-Logging.Parser  On
        K8S-Logging.Exclude On

    [OUTPUT]
        Name  elasticsearch
        Match kube.*
        Host  elasticsearch.tsiot-monitoring.svc.cluster.local
        Port  9200
        Index tsiot-logs
        Type  _doc
        Logstash_Format On
        Logstash_Prefix tsiot
        Retry_Limit 5

  parsers.conf: |
    [PARSER]
        Name   docker
        Format json
        Time_Key time
        Time_Format %Y-%m-%dT%H:%M:%S.%L
        Time_Keep On

    [PARSER]
        Name        json
        Format      json
        Time_Key    timestamp
        Time_Format %Y-%m-%dT%H:%M:%S.%L
        Time_Keep   On