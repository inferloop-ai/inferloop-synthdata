# pyproject.toml
"""
Project configuration for Audio Synthetic Data Framework
"""

[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "audio-synthetic-data"
version = "1.0.0"
description = "Comprehensive framework for generating and validating synthetic audio data with privacy and fairness guarantees"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Audio Synth Team", email = "team@audiosynth.ai"}
]
maintainers = [
    {name = "Audio Synth Team", email = "team@audiosynth.ai"}
]
keywords = [
    "audio", "synthetic-data", "speech-synthesis", "privacy", "fairness", 
    "machine-learning", "deep-learning", "tts", "voice-conversion"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Multimedia :: Sound/Audio :: Analysis",
    "Topic :: Multimedia :: Sound/Audio :: Speech"
]
requires-python = ">=3.8"
dependencies = [
    "torch>=2.0.0",
    "torchaudio>=2.0.0",
    "numpy>=1.21.0",
    "scipy>=1.7.0",
    "librosa>=0.9.0",
    "soundfile>=0.10.0",
    "transformers>=4.20.0",
    "diffusers>=0.18.0",
    "fastapi>=0.95.0",
    "uvicorn>=0.20.0",
    "pydantic>=1.10.0",
    "click>=8.0.0",
    "pyyaml>=6.0",
    "pandas>=1.5.0",
    "scikit-learn>=1.2.0",
    "matplotlib>=3.5.0",
    "tqdm>=4.64.0"
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "black>=22.0.0",
    "flake8>=5.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0"
]
api = [
    "python-multipart>=0.0.6",
    "aiofiles>=22.1.0",
    "jinja2>=3.1.0"
]
analysis = [
    "pesq>=0.0.3",
    "pystoi>=0.3.3",
    "seaborn>=0.11.0",
    "plotly>=5.0.0"
]
privacy = [
    "cryptography>=3.4.0",
    "opacus>=1.4.0"
]

[project.urls]
Homepage = "https://github.com/audiosynth/audio-synthetic-data"
Documentation = "https://audiosynth.readthedocs.io"
Repository = "https://github.com/audiosynth/audio-synthetic-data"
Issues = "https://github.com/audiosynth/audio-synthetic-data/issues"
Changelog = "https://github.com/audiosynth/audio-synthetic-data/blob/main/CHANGELOG.md"

[project.scripts]
audio-synth = "audio_synth.cli.main:cli"
audio-synth-server = "audio_synth.api.server:main"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
audio_synth = ["configs/*.yaml", "templates/*.html"]

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/

'''
[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "--tb=short"
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests"
]
