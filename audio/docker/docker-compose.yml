# docker/docker-compose.yml
# 
#Docker Compose configuration for full Audio Synthetic Data stack

version: '3.8'

services:
  audio-synth-api:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ./models:/app/models
      - ./output:/app/output
      - ./logs:/app/logs
      - ./configs:/app/configs
    environment:
      - AUDIO_SYNTH_CONFIG=/app/configs/production.yaml
      - LOG_LEVEL=INFO
    depends_on:
      - redis
      - postgres
    networks:
      - audio-synth-network

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - audio-synth-network

  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=audiosynth
      - POSTGRES_USER=audiosynth
      - POSTGRES_PASSWORD=audiosynth_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - audio-synth-network

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - audio-synth-api
    networks:
      - audio-synth-network

  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    networks:
      - audio-synth-network

  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus
    networks:
      - audio-synth-network

volumes:
  redis_data:
  postgres_data:
  prometheus_data:
  grafana_data:

networks:
  audio-synth-network:
    driver: bridge
