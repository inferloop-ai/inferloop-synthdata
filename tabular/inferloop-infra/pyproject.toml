[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "inferloop-infra"
version = "0.1.0"
description = "Infrastructure modules for Inferloop Synthetic Data Generator"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
authors = [
    {name = "Inferloop Team", email = "team@inferloop.com"},
]
keywords = ["infrastructure", "cloud", "aws", "gcp", "azure", "synthetic-data"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]

dependencies = [
    "pydantic>=2.0.0",
    "pyyaml>=6.0",
    "click>=8.0.0",
    "rich>=13.0.0",
    "python-dotenv>=1.0.0",
    "cryptography>=41.0.0",
    "jinja2>=3.0.0",
]

[project.optional-dependencies]
aws = [
    "boto3>=1.28.0",
    "botocore>=1.31.0",
]
gcp = [
    "google-cloud-storage>=2.10.0",
    "google-cloud-compute>=1.14.0",
    "google-cloud-monitoring>=2.15.0",
    "google-cloud-secret-manager>=2.16.0",
]
azure = [
    "azure-mgmt-compute>=30.0.0",
    "azure-mgmt-storage>=21.0.0",
    "azure-mgmt-network>=23.0.0",
    "azure-keyvault-secrets>=4.7.0",
]
kubernetes = [
    "kubernetes>=28.0.0",
    "pyyaml>=6.0",
]
terraform = [
    "python-terraform>=0.10.0",
]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "moto[all]>=4.2.0",  # AWS mocking
    "responses>=0.23.0",  # HTTP mocking
]
all = [
    "inferloop-infra[aws,gcp,azure,kubernetes,terraform,dev]",
]

[project.scripts]
inferloop-infra = "inferloop_infra.cli:main"

[tool.setuptools]
packages = ["common", "aws", "gcp", "azure", "onprem"]

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311']

[tool.isort]
profile = "black"
line_length = 88

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
follow_imports = "normal"
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = "--strict-markers"